{{- if .Values.rbac.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}

---
# ClusterRole for infrastructure monitoring (cluster-metrics, node-metrics collectors)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-infrastructure-role
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
rules:
# Required for k8s_cluster receiver
- apiGroups: [""]
  resources:
    - nodes
    - nodes/metrics  
    - services
    - endpoints
    - pods
    - configmaps
    - namespaces
    - replicationcontrollers
    - resourcequotas
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
    - deployments
    - replicasets
    - statefulsets
    - daemonsets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
    - jobs
    - cronjobs
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
    - horizontalpodautoscalers
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
  verbs: ["get", "list", "watch"]

---
# ClusterRole for application collectors (receiver, tailsampling, spanmetrics, servicegraph)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-application-role
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
rules:
# Required for load balancing and service discovery
- apiGroups: [""]
  resources:
    - endpoints
    - services
  verbs: ["get", "list", "watch"]

---
# ClusterRole for kubelet stats (node-metrics collector)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-kubelet-role
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
rules:
# Required for kubeletstats receiver
- apiGroups: [""]
  resources:
    - nodes/stats
    - nodes/proxy
  verbs: ["get"]

---
# ClusterRoleBinding for application collectors (receiver, tailsampling, spanmetrics, servicegraph)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-application-binding
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-application-role
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Values.global.namespace }}

---
# ClusterRoleBinding for infrastructure collectors (cluster-metrics, node-metrics)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-infrastructure-binding
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-infrastructure-role
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Values.global.namespace }}

---
# ClusterRoleBinding for kubelet stats (node-metrics collector)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-kubelet-binding
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-kubelet-role
subjects:
{{- if index .Values.collectors "node-metrics" "enabled" }}
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Values.global.namespace }}
{{- end }}

---
# ClusterRoleBinding for Target Allocator service accounts (infrastructure collectors only)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-ta-infrastructure-binding
  labels:
    {{- include "otel-collectors.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-infrastructure-role
subjects:
{{- range $name, $collector := .Values.collectors }}
{{- if $collector.enabled }}
{{- $mergedCollector := deepCopy $.Values.collectorsCommon | mustMergeOverwrite (deepCopy $collector) }}
{{- if and $mergedCollector.targetAllocator $mergedCollector.targetAllocator.enabled }}
- kind: ServiceAccount
  name: {{ $.Release.Name }}-{{ $name }}-targetallocator
  namespace: {{ $.Values.global.namespace }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.15.4

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Update Chart version
      run: |
        cd otel-collectors
        # Update Chart.yaml with the new version
        sed -i "s/^version:.*/version: ${{ steps.get_version.outputs.VERSION }}/" Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: ${{ steps.get_version.outputs.VERSION }}/" Chart.yaml

    - name: Package Helm Chart
      run: |
        cd otel-collectors
        helm package .

    - name: Generate changelog
      id: changelog
      run: |
        if [ -n "$(git tag -l --sort=-version:refname | head -2 | tail -1)" ]; then
          PREVIOUS_TAG=$(git tag -l --sort=-version:refname | head -2 | tail -1)
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          
          # Generate commit list since last tag
          COMMITS=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD --no-merges)
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "COMMITS=* Initial release" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.TAG }}
        name: Release ${{ steps.get_version.outputs.TAG }}
        generate_release_notes: true
        body: |
          ## Changes in this release
          
          ${{ steps.changelog.outputs.COMMITS }}
          
          ## Helm Chart Installation
          
          ```bash
          helm install otel-collectors oci://ghcr.io/${{ github.repository_owner }}/charts/otel-collectors --version ${{ steps.get_version.outputs.VERSION }} -n o11y
          ```
          
          See [documentation](https://github.com/${{ github.repository }}/blob/main/README.md) for configuration details.
        files: |
          otel-collectors/*.tgz

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to OCI Registry
      run: |
        cd otel-collectors
        CHART_NAME=$(ls *.tgz)
        helm push $CHART_NAME oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts